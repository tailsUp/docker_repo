services:
  app:
    image: frontend-dev
    volumes:
    - ./frontend/:/usr/src/app
    container_name: container-development-application
    depends_on:
      - app2
  app2:
    image: backend-dev
    volumes:
      - ./backend/:/usr/src/app
    container_name: container-development-backend
    environment:
      - PORT=3011
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
    depends_on:
      - mongo
      - redis
  mongo:
    image: mongo
    #ports:
    #  - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./backend/mongo_data:/data/db
  redis:
    image: redis
    #ports:
    #  - 6379:6379
    volumes:
      - ./backend/redis_data:/data
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy-develop
    depends_on:
      - app
      - app2
      - mongo
      - redis
  debug-helper:
    image: busybox

volumes:
  mongo_data:
  redis_data:

#NOIN 100 yritys ja saatu k채yntiin....


#FRONENTD:
  #services:
  #  app:
  #    image: frontend-dev
  #    build:
  #      context: . # The context will pick this directory as the "build context"
  #      dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
  #    volumes:
  #      - ./:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
  #    ports:
  #      - 5173:5173
  #    container_name: container-frontend-dev # This will name the container container-frontend-dev
  #  debug-helper:
  #    image: busybox  
  #  nginx:
  #    image: nginx:1.20.1
  #    volumes:
  #      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
  #    ports:
  #      - 8080:80
  #    container_name: reverse-proxy
  #    depends_on:
  #      - app

#BACKEND:
  #services:
  #  app2:
  #    image: backend-dev
  #    build:
  #      context: .
  #      dockerfile: dev.Dockerfile
  #    volumes:
  #      - ./:/usr/src/app
  #    ports:
  #      - 3011:3011
  #    container_name: container-backend-dev
  #    environment:
  #      - PORT=3011
  #      - REDIS_URL=redis://redis:6379
  #      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
  #    depends_on:
  #      - mongo
  #      - redis
  #  mongo:
  #    image: mongo
  #    ports:
  #      - 3456:27017
  #    environment:
  #      MONGO_INITDB_ROOT_USERNAME: root
  #      MONGO_INITDB_ROOT_PASSWORD: example
  #      MONGO_INITDB_DATABASE: the_database
  #    volumes:
  #      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
  #      - ./mongo_data:/data/db   #BIND MOUNT --> pit채isi pit채채 data tallessa..
  #  redis:
  #    image: redis
  #    ports:
  #      - 6379:6379
  #    volumes:
  #      - ./redis_data:/data
  #  debug-helper:
  #    image: busybox

  #volumes:
  #  mongo_data:
  #  redis_data: