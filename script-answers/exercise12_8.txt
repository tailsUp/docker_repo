sorsa@Nikke-MacBook-Pro backend % docker exec -it backend-mongo-1 mongosh -u root -p example
Current Mongosh Log ID:	67325e740cdb71ed5359139d
Connecting to:		mongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.3.2
Using MongoDB:		8.0.3
Using Mongosh:		2.3.2

For mongosh info see: https://www.mongodb.com/docs/mongodb-shell/

------
   The server generated these startup warnings when booting
   2024-11-11T19:32:07.092+00:00: For customers running the current memory allocator, we suggest changing the contents of the following sysfsFile
   2024-11-11T19:32:07.092+00:00: We suggest setting the contents of sysfsFile to 0.
   2024-11-11T19:32:07.092+00:00: Your system has glibc support for rseq built in, which is not yet supported by tcmalloc-google and has critical performance implications. Please set the environment variable GLIBC_TUNABLES=glibc.pthread.rseq=0
   2024-11-11T19:32:07.092+00:00: vm.max_map_count is too low
   2024-11-11T19:32:07.093+00:00: We suggest setting swappiness to 0 or 1, as swapping can cause performance problems.
------

test> show dbs
admin         100.00 KiB
config        108.00 KiB
local          72.00 KiB
the_database   56.00 KiB
test> use the_database
switched to db the_database
the_database> show collections
todos
the_database> db.todos.find({})
[
  {
    _id: ObjectId('672e331bdf82f267b859139e'),
    text: 'Write code',
    done: true
  },
  {
    _id: ObjectId('672e331bdf82f267b859139f'),
    text: 'Learn about containers UPDATED',
    done: false,
    __v: 0
  }
]
the_database> db.todos.insertOne( { text: 'Learning to insert in DB through CLI', done: true } )
{
  acknowledged: true,
  insertedId: ObjectId('67325f650cdb71ed5359139e')
}
the_database> db.todos.find({})
[
  {
    _id: ObjectId('672e331bdf82f267b859139e'),
    text: 'Write code',
    done: true
  },
  {
    _id: ObjectId('672e331bdf82f267b859139f'),
    text: 'Learn about containers UPDATED',
    done: false,
    __v: 0
  },
  {
    _id: ObjectId('67325f650cdb71ed5359139e'),
    text: 'Learning to insert in DB through CLI',
    done: true
  }
]
the_database> db.todos.insertOne( { text: 'Increase the number of tools in my tool belt', done: false } )
{
  acknowledged: true,
  insertedId: ObjectId('67325f8d0cdb71ed5359139f')
}
the_database> db.todos.find({})
[
  {
    _id: ObjectId('672e331bdf82f267b859139e'),
    text: 'Write code',
    done: true
  },
  {
    _id: ObjectId('672e331bdf82f267b859139f'),
    text: 'Learn about containers UPDATED',
    done: false,
    __v: 0
  },
  {
    _id: ObjectId('67325f650cdb71ed5359139e'),
    text: 'Learning to insert in DB through CLI',
    done: true
  },
  {
    _id: ObjectId('67325f8d0cdb71ed5359139f'),
    text: 'Increase the number of tools in my tool belt',
    done: false
  }
]